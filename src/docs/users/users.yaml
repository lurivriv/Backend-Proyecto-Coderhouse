paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios (Iniciar sesión con admin)
      tags:
        - Usuarios
      responses:
        "200":
          description: Los usuarios se obtuvieron con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  users:
                    type: array
                    items:
                      $ref: "#components/schemas/User"
        "401":
          description: Este usuario no tiene permisos para obtener los usuarios
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "500":
          description: No se obtuvieron los usuarios por un error en el servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"

    delete:
      summary: Eliminar usuarios inactivos (Iniciar sesión con admin)
      tags:
        - Usuarios
      responses:
        "200":
          description: Se eliminaron los usuarios inactivos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/DeleteInactiveUsersSuccess"
        "401":
          description: Este usuario no tiene permisos para eliminar los usuarios inactivos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "500":
          description: No se eliminaron los usuarios inactivos por un error en el servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
  
  /api/users/{uid}:
    get:
      summary: Obtener un usuario por Id (Iniciar sesión con admin)
      tags:
        - Usuarios
      parameters:
        - name: uid
          in: path
          required: true
          description: El Id del usuario a obtener
          schema:
            $type: string
      responses:
        "200":
          description: Se obtuvo el usuario por Id con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  user:
                    $ref: "#components/schemas/User"
        "401":
          description: Este usuario no tiene permisos para obtener el usuario por Id
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "404":
          description: El usuario no fue encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "500":
          description: No se obtuvo el usuario por un error en el servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"

    put:
      summary: Actualizar un usuario (Iniciar sesión)
      tags:
        - Usuarios
      parameters:
        - name: uid
          in: path
          required: true
          description: El Id del usuario a actualizar
          schema:
            $type: string
      requestBody:
        required: true
        description: Datos del usuario a actualizar
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/UpdateUser"
      responses:
        "200":
          description: Usuario actualizado con éxito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UpdateUserSuccess"
        "404":
          description: El usuario no fue encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "500":
          description: No se actualizó el usuario por un error en el servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"

    delete:
      summary: Eliminar un usuario por Id (Iniciar sesión)
      tags:
        - Usuarios
      parameters:
        - name: uid
          in: path
          required: true
          description: El Id del usuario a eliminar
          schema:
            $type: string
      responses:
        "200":
          description: Se eliminó el usuario con éxito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/DeleteUserSuccess"
        "404":
          description: El usuario a eliminar no fue encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "500":
          description: No se eliminó el usuario por un error en el servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
  
  /api/users/premium/{uid}:
    put:
      summary: Modificar el rol de un usuario (Iniciar sesión con admin)
      tags:
        - Usuarios
      parameters:
        - name: uid
          in: path
          required: true
          description: El Id del usuario a modificarle el rol
          schema:
            $type: string
      responses:
        "200":
          description: El rol del usuario se modificó con éxito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/SuccessMessage"
        "401":
          description: Este usuario no tiene permisos para modificar roles
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "404":
          description: El usuario no fue encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "500":
          description: No se modificó el rol del usuario por un error en el servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"

  /api/users/{uid}/documents:
    post:
      summary: Subir documentos del usuario (Iniciar sesión)
      tags:
        - Usuarios
      parameters:
        - name: uid
          in: path
          required: true
          description: El Id del usuario de los documentos
          schema:
            $type: string
      requestBody:
        required: true
        description: Documento a subir
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/AddDocumentUser"
      responses:
        "200":
          description: Documento subido con éxito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/AddDocumentUserSuccess"
        "404":
          description: El usuario no fue encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"
        "500":
          description: No se subió el documento por un error en el servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorMessage"

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          description: Id generado por la base de datos (requerido)
        full_name:
          type: string
          description: Nombre y apellido del usuario (generado a partir de first_name y last_name o del github_name)
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario (aclaración del usuario de GitHub en caso de ser un usuario registrado con dicha opción) (único)
        age:
          type: number
          description: Edad del usuario
        password:
          type: string
          description: Contraseña encriptada del usuario
        role:
          type: string
          description: Rol del usuario ("usuario", "admin", "premium")
        cart:
          type: string
          format: ObjectId
          description: Id del carrito asociado al usuario (generado por la base de datos)
        documents:
          type: array
          description: Documentos subidos por el usuario (requerido para ser premium)
          items:
            type: object
            properties:
              name:
                type: string
              reference:
                type: string
        last_connection:
          type: date
          description: Fecha de última actividad del usuario
        status:
          type: string
          description: Estado de los documentos
        avatar:
          type: string
          description: Foto de perfil
        github_user:
          type: boolean
          description: Booleano correspondiente a usuarios locales o de GitHub
        github_username:
          type: string
          description: Usuario de GitHub del usuario (aclaración del email en caso de ser un usuario local) (único)
      example:
        _id: hjsg892778234sde32
        full_name: Admin Coder
        first_name: Admin
        last_name: Coder
        email: adminCoder@coder.com
        age: 20
        password: usy89127kjashd9123asd
        role: admin
        cart: d43r34nfrh43rj43t4
        documents: []
        last_connection: 2024-01-27T02:18:17.188Z
        status: pendiente
        avatar: "noImgProfile-profile.jpg"
        github_user: false
        github_username: Registrado con email adminCoder@coder.com

    UpdateUserSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        userInfoDto:
          $ref: "#components/schemas/User"
      example:
        status: success
        message: Usuario actualizado
        userInfoDto:
          _id: dvfesr343w42qwrfwr
          avatar: "noImgProfile-profile.jpg"
          full_name: Nombre Apellido
          email: prueba@gmail.com
          age: 20
          role: usuario
          status: pendiente
          cart: kkkdsdkwee23w3e32

    DeleteUserSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        deletedUser:
          $ref: "#components/schemas/User"
      example:
        status: success
        message: Usuario eliminado
        deletedUser:
          _id: hjsg892778234sde32
          full_name: Nombre Apellido
          first_name: Nombre
          last_name: Apellido
          email: usuario@gmail.com
          age: 20
          password: vefg3454354tgt556t5
          role: usuario
          cart: fnerj48yr43rfu
          documents: []
          last_connection: 2024-01-27T02:18:17.188Z
          status: pendiente
          avatar: "noImgProfile-profile.jpg"
          github_user: false
          github_username: Registrado con email usuario@gmail.com

    DeleteInactiveUsersSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        deletedInactiveUsers:
          type: array
          items:
            $ref: "#components/schemas/User"
      example:
        status: success
        message: Los usuarios inactivos fueron eliminados
        deletedInactiveUsers:
          - _id: hjsg892778234sde32
            full_name: Nombre Apellido
            first_name: Nombre
            last_name: Apellido
            email: usuario@gmail.com
            age: 20
            password: vefg3454354tgt556t5
            role: usuario
            cart: fnerj48yr43rfu
            documents: []
            last_connection: 2024-01-27T02:18:17.188Z
            status: pendiente
            avatar: "noImgProfile-profile.jpg"
            github_user: false
            github_username: Registrado con email usuario@gmail.com

    AddDocumentUserSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              reference:
                type: string
      example:
        status: success
        message: Los documentos del usuario fueron actualizados con éxito
        documents:
          - name: identification
            reference: prueba@gmail.com-document-identificacion.pdf
          - name: address
            reference: prueba@gmail.com-document-comprobanteDeDomicilio.pdf
          - name: account_statement
            reference: prueba@gmail.com-document-comprobanteDeEstadoDeCuenta.pdf

    SuccessMessage:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: success
        message: Proceso exitoso

    ErrorMessage:
      type: object
      properties:
        status:
          type: string
        error:
          type: string
      example:
        status: error
        error: Ocurrió un error

  requestBodies:
    UpdateUser:
      type: object
      properties:
        avatar:
          type: string
          description: Foto de perfil
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario (único)
        age:
          type: number
          description: Edad del usuario
      example:
        avatar: nuevoemail@gmail.com-profile-fotodeperfil.jpg
        first_name: soy
        last_name: prueba
        email: nuevoemail@gmail.com
        age: 20

    AddDocumentUser:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          reference:
            type: string
      example:
        - name: identification
          reference: prueba@gmail.com-document-identificacion.pdf
        - name: address
          reference: prueba@gmail.com-document-comprobanteDeDomicilio.pdf
        - name: account_statement
          reference: prueba@gmail.com-document-comprobanteDeEstadoDeCuenta.pdf